给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。

你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。

返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

源码：
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        minprice = 1e9
        maxprofit = -1
        for i in prices:
            maxprofit = max(i-minprice, maxprofit)
            minprice = min(i, minprice)
        if maxprofit > 0:
            return maxprofit
        else:
            return 0
            
分析：动态规划思想，首先假设在i处取得最低价格，接下来只要在取得差额最大时卖出即可，而在数组迭代的同时，不断更新最低价格寻找最大差额
